<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Veriloghdl on Utkarsh M</title>
    <link>http://localhost:1313/tags/veriloghdl/</link>
    <description>Recent content in Veriloghdl on Utkarsh M</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/veriloghdl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Smart Network Interface Card on FPGA – Major Project Edition</title>
      <link>http://localhost:1313/posts/smart-nic-on-fpga/</link>
      <pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/smart-nic-on-fpga/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/Utkar5hM/fpga-based-packet-processing-unit&#34;&gt;Project GitHub Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this post, I’ll walk through how we built a Smart NIC on an FPGA as part of our final-year major project. This project was developed with my teammates &lt;a href=&#34;https://www.linkedin.com/in/chinmay-sharma-9a68b8200/&#34;&gt;Chinmay&lt;/a&gt; and &lt;a href=&#34;https://www.linkedin.com/in/muthuku37/&#34;&gt;Muthukumar&lt;/a&gt;. The concept stemmed from our prior exposure to XDP/eBPF, which led us to explore hardware offloading. While our initial goals were ambitious, the timeline and complexity forced us to adapt along the way.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;project-objectives&#34;&gt;Project Objectives&lt;/h2&gt;&#xA;&lt;p&gt;Originally, the project aimed to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting started with Migen | A python based HDL</title>
      <link>http://localhost:1313/posts/migen/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/migen/</guid>
      <description>&lt;p&gt;In digital design, the complexity of designing a circuit gave birth to standard languages to describe digital circuits (i.e. Hardware Description Languages - HDL). HDLs are used to model hardware elements very concurrently. Verilog HDL and VHDL are the most popular HDLs.&lt;/p&gt;&#xA;&lt;p&gt;Digital circuits are described at Registers Transfer Level (RTL) using HDL. Then logic synthesis tool will generate details of gates and interconnection to implement courses. This synthesized result can be used for fabrication by having placement and routing components, and later its functionality can be verified using simulation.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
