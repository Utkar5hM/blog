<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Utkarsh M</title><link>https://utkar5hm.github.io/tags/linux/</link><description>Recent content in Linux on Utkarsh M</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 22 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://utkar5hm.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Performance Schema vs eBPF-based Query Profiling</title><link>https://utkar5hm.github.io/posts/ebpf-vs-perf-schema/</link><pubDate>Fri, 22 Nov 2024 00:00:00 +0000</pubDate><guid>https://utkar5hm.github.io/posts/ebpf-vs-perf-schema/</guid><description>&lt;p>During my time at IRIS NITK, I had the opportunity to work with a talented group of peers exploring distributed strategies for MariaDB. While I couldn’t dive deeply into every aspect, I gained valuable exposure, particularly to eBPF, which several colleagues were using for research and internal tools. That sparked my interest in the technology.&lt;/p>
&lt;p>After completing my internship, I began building an eBPF based monitoring tool to understand the space better. Although the initial version was completed, I didn’t revisit it for over a year.&lt;/p></description></item><item><title>Building a Smart Network Interface Card on FPGA – Major Project Edition</title><link>https://utkar5hm.github.io/posts/smart-nic-on-fpga/</link><pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate><guid>https://utkar5hm.github.io/posts/smart-nic-on-fpga/</guid><description>&lt;p>&lt;a href="https://github.com/Utkar5hM/fpga-based-packet-processing-unit">Project GitHub Link&lt;/a>&lt;/p>
&lt;p>In this post, I’ll walk through how we built a Smart NIC on an FPGA as part of our final-year major project. This project was developed with my teammates &lt;a href="https://www.linkedin.com/in/chinmay-sharma-9a68b8200/">Chinmay&lt;/a> and &lt;a href="https://www.linkedin.com/in/muthuku37/">Muthukumar&lt;/a>. The concept stemmed from our prior exposure to XDP/eBPF, which led us to explore hardware offloading. While our initial goals were ambitious, the timeline and complexity forced us to adapt along the way.&lt;/p>
&lt;hr>
&lt;h2 id="project-objectives">Project Objectives&lt;/h2>
&lt;p>Originally, the project aimed to:&lt;/p></description></item><item><title>Adding Hotstpot/AP mode support for MT7921 on Linux (stock / linux-g14 kernel)</title><link>https://utkar5hm.github.io/posts/hotspot/</link><pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate><guid>https://utkar5hm.github.io/posts/hotspot/</guid><description>&lt;p>Since the current Linux kernel drivers for MT7921 doesn’t support Monitor mode, I couldn’t enable the wifi hotspot through my Zephyrus G14 on Linux. So I found out that there is a patch available for the drivers which might come out on later Linux kernel releases. If you want, you can wait for the time being or try compiling the kernel with the patch by yourselves.&lt;/p>
&lt;p>I will be showing you on how to apply the patch over both the stock and linux-g14 kernel. I’m using Arch Linux on Zephyrus-G14 GA401QH. applying the patch on stock firmware should most probably work for other laptops with MT7921 and could be performed similarly for other distros.&lt;/p></description></item></channel></rss>